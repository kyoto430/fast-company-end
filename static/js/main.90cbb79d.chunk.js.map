{"version":3,"sources":["reportWebVitals.js","app/utils/ validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radio.Field.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/http.service.js","app/services/user.service.js","app/hooks/useAuth.jsx","app/services/profession.service.js","app/hooks/useProfession.jsx","app/services/qaulity.service.js","app/hooks/useQualities.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/hooks/useUsers.jsx","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/hooks/useComments.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","http","axios","create","baseURL","configFile","apiEndpoint","interceptors","request","use","a","isFireBase","containSlash","url","slice","now","httpAuth","post","grant_type","refresh_token","id_token","expires_in","user_id","accessToken","params","auth","Promise","reject","response","res","content","key","status","console","log","toast","httpService","get","put","delete","patch","userEndpoint","userService","payload","getCurrentUser","updateUser","process","REACT_APP_FIREBASE_KEY","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","undefined","currentUser","setUser","setError","isLoading","setLoading","email","password","returnSecureToken","getUserData","errorCatcher","code","Error","randomInt","min","max","Math","floor","random","rest","createUser","rate","completedMeetings","image","toString","substring","formData","useEffect","Provider","signUp","logIn","logOut","push","professionService","req","ProfessionContext","useProfessions","ProfessionProvider","professions","setProfessions","getProfessionsList","getProfession","find","p","qualityService","fetchAll","QualitiesContex","useQualities","QualitiesProvider","qualities","setQualities","getQualities","getQuality","q","EditUserPage","setIsLoading","profession","sex","setData","setErrors","transformQualitiesData","filter","qual","includes","transformProfessionData","prof","qualitiesList","handleSubmit","e","preventDefault","validatorConfog","isRequired","isEmail","isValid","onSubmit","values","UserCard","user","location","pathname","src","width","role","Quality","color","Qualities","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","UserContext","useUser","UserProvider","users","setUsers","getUsers","getUserById","userId","Comment","created","created_at","onRemove","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","CommentsContext","CommentsProvider","useParams","setComments","nanoid","c","Comments","sortedComments","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","indexOf","renderPhrase","BookMark","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","scope","Table","Profession","UserTable","onToggleBookMark","to","bookmark","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","take","paginate","placeholder","onDelete","newArray","pageIndex","Users","edit","CheckBoxField","LoginForm","stayOn","enterError","setEnterError","state","from","RegisterForm","licence","professionsList","isCapitalSymbol","isContainDigit","newData","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summuryCount","incrementCount","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","aria-current","ProtectedRoute","Component","render","props","LogOut","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"koKAceA,G,MAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MACjB,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4DCRjB,SAASQ,EAAUC,EAAMC,GAC5B,IAAMC,EAAS,GACf,SAASC,EAASC,EAAgBJ,EAAMC,GACpC,IAAII,EACJ,OAAQD,GACJ,IAAK,aAEGC,EADgB,mBAATL,GACWA,EAEe,KAAhBA,EAAKM,OAE1B,MAEJ,IAAK,UAEDD,GADoB,kBACUE,KAAKP,GACnC,MAEJ,IAAK,kBAEDK,GADsB,UACUE,KAAKP,GACrC,MAEJ,IAAK,iBAEDK,GADoB,OACUE,KAAKP,GACnC,MAEJ,IAAK,MACDK,EAAiBL,EAAKQ,OAASP,EAAOQ,MAM9C,GAAIJ,EAAgB,OAAOJ,EAAOS,QAEtC,IAAK,IAAMC,KAAaX,EACpB,IAAK,IAAMI,KAAkBH,EAAOU,GAAY,CAC5C,IAAMC,EAAQT,EACVC,EACAJ,EAAKW,GACLV,EAAOU,GAAWP,IAElBQ,IAAUV,EAAOS,KACjBT,EAAOS,GAAaC,GAIhC,OAAOV,E,WC9CLW,EAAY,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,MAAOQ,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,MAAY,EACzBM,oBAAS,GADgB,mBAC1DC,EAD0D,KAC5CC,EAD4C,KAYjE,OACI,sBAAKC,UAAU,OAAf,UACI,wBAAOC,QAASN,EAAhB,cAAwBF,KACxB,sBAAKO,UAAU,6BAAf,UACI,uBACIN,KAAMI,EAAe,OAASJ,EAC9BQ,GAAIP,EACJA,KAAMA,EACNP,MAAOA,EACPQ,SAlBK,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACpBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAkBhCY,UAfL,gBAAkBT,EAAQ,cAAgB,MAkB/B,aAATG,GACG,wBACIM,UAAU,4BACVN,KAAK,SACLU,QApBO,WACvBL,GAAgB,SAACM,GAAD,OAAgBA,MAgBpB,SAKI,mBACIL,UACI,aAAeF,EAAe,SAAW,QAKxDP,GAAS,qBAAKS,UAAU,oBAAf,SAAoCT,WAK9DC,EAAUc,aAAe,CACrBZ,KAAM,QAWKF,QCKAe,EA5DK,SAAC,GAQd,IAPHd,EAOE,EAPFA,MACAL,EAME,EANFA,MACAQ,EAKE,EALFA,SACAY,EAIE,EAJFA,cACAC,EAGE,EAHFA,QACAlB,EAEE,EAFFA,MACAI,EACE,EADFA,KASMe,EACDC,MAAMC,QAAQH,IAA+B,kBAAZA,EAK5BA,EAJAI,OAAOC,KAAKL,GAASM,KAAI,SAACC,GAAD,MAAiB,CACtCrB,KAAMc,EAAQO,GAAYrB,KAC1BP,MAAOqB,EAAQO,GAAYC,QAIzC,OACI,sBAAKjB,UAAU,OAAf,UACI,uBAAOC,QAAQ,qBAAqBD,UAAU,aAA9C,SACKP,IAEL,yBACIO,UAjBD,eAAiBT,EAAQ,cAAgB,IAkBxCW,GAAG,qBACHP,KAAMA,EACNP,MAAOA,EACPQ,SAzBS,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACpBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAmBxC,UAOI,wBAAQ8B,UAAQ,EAAC9B,MAAM,GAAvB,SACKoB,IAEJE,GACGA,EAAaK,KAAI,SAACI,GAAD,OACb,wBAAQ/B,MAAO+B,EAAO/B,MAAtB,SACK+B,EAAOxB,MADsBwB,EAAO/B,aAKpDG,GAAS,qBAAKS,UAAU,mBAAf,SAAmCT,QCJ1C6B,EA3CI,SAAC,GAA+C,IAA7CX,EAA4C,EAA5CA,QAASd,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,SAAUR,EAAmB,EAAnBA,MAAOK,EAAY,EAAZA,MAC5C4B,EAAe,SAAC,GAAgB,IAAdlB,EAAa,EAAbA,OACpBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAEhD,OACI,sBAAKY,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,SAA+BP,IAC/B,8BACKgB,EAAQM,KAAI,SAACI,GAAD,OACT,sBAEInB,UAAU,+BAFd,UAII,uBACIA,UAAU,mBACVN,KAAK,QACLC,KAAMA,EACNO,GAAIiB,EAAOxB,KAAO,IAAMwB,EAAO/B,MAC/BkC,QAASH,EAAO/B,QAAUA,EAC1BA,MAAO+B,EAAO/B,MACdQ,SAAUyB,IAEd,uBACIrB,UAAU,mBACVC,QAASkB,EAAOxB,KAAO,IAAMwB,EAAO/B,MAFxC,SAIK+B,EAAOxB,SAhBPwB,EAAOxB,KAAO,IAAMwB,EAAO/B,gB,QC4BzCmC,EApCU,SAAC,GAAsD,IAApDd,EAAmD,EAAnDA,QAASb,EAA0C,EAA1CA,SAAUD,EAAgC,EAAhCA,KAAMF,EAA0B,EAA1BA,MAAO+B,EAAmB,EAAnBA,aAClDd,EACDC,MAAMC,QAAQH,IAA+B,kBAAZA,EAK5BA,EAJAI,OAAOC,KAAKL,GAASM,KAAI,SAACC,GAAD,MAAiB,CACtCvB,MAAOgB,EAAQO,GAAYrB,KAC3BP,MAAOqB,EAAQO,GAAYC,QAOzC,OACI,sBAAKjB,UAAU,OAAf,UACI,uBAAOA,UAAU,aAAjB,SAA+BP,IAC/B,cAAC,IAAD,CACIgC,SAAO,EACPC,mBAAmB,EACnBF,aAAcA,EACdf,QAASC,EACTV,UAAU,qBACV2B,gBAAgB,SAChB/B,SAbS,SAACR,GAClBQ,EAAS,CAAED,KAAMA,EAAMP,WAafO,KAAMA,QCfPiC,EAVW,WACtB,IAAMC,EAAUC,cAChB,OACI,yBAAQ9B,UAAU,kBAAkBI,QAAS,kBAAMyB,EAAQE,UAA3D,UACI,mBAAG/B,UAAU,qBADjB,qC,wCCLFgC,EAAY,YACZC,EAAc,oBACdC,EAAc,cACdC,EAAa,gBAEZ,SAASC,EAAT,GAKH,IAJAC,EAID,EAJCA,aACAC,EAGD,EAHCA,QACAC,EAED,EAFCA,QAED,IADCC,iBACD,MADa,KACb,EACOC,GAAc,IAAIC,MAAOC,UAAwB,IAAZH,EAC3CI,aAAaC,QAAQV,EAAYI,GACjCK,aAAaC,QAAQb,EAAWM,GAChCM,aAAaC,QAAQZ,EAAaI,GAClCO,aAAaC,QAAQX,EAAaO,GAoBtC,IAQeK,EARa,CACxBV,YACAW,eApBG,WACH,OAAOH,aAAaI,QAAQhB,IAoB5BiB,gBAlBG,WACH,OAAOL,aAAaI,QAAQf,IAkB5BiB,oBAVG,WACH,OAAON,aAAaI,QAAQd,IAU5BiB,UARG,WACH,OAAOP,aAAaI,QAAQb,IAQ5BiB,eAlBG,WACHR,aAAaS,WAAWlB,GACxBS,aAAaS,WAAWrB,GACxBY,aAAaS,WAAWpB,GACxBW,aAAaS,WAAWnB,KCrBtBoB,EAAOC,IAAMC,OAAO,CACtBC,QAASC,EAAWC,cAGxBL,EAAKM,aAAaC,QAAQC,IAA1B,uCACI,WAAgBlF,GAAhB,yBAAAmF,EAAA,0DACQL,EAAWM,WADnB,oBAEcC,EAAe,QAAQ/E,KAAKN,EAAOsF,KACzCtF,EAAOsF,KACFD,EAAerF,EAAOsF,IAAIC,MAAM,GAAI,GAAKvF,EAAOsF,KAAO,QACtDzB,EAAcK,EAAoBI,yBAClCb,EAAeS,EAAoBG,oBACrBR,EAAcC,KAAK0B,OAP/C,iCAQmCC,EAASC,KAAK,QAAS,CAC1CC,WAAY,gBACZC,cAAenC,IAV/B,gBAQoB1D,EARpB,EAQoBA,KAIRmE,EAAoBV,UAAU,CAC1BC,aAAc1D,EAAK6F,cACnBlC,QAAS3D,EAAK8F,SACdjC,UAAW7D,EAAK+F,WAChBnC,QAAS5D,EAAKgG,UAhB9B,SAmBcC,EAAc9B,EAAoBC,oBAEpCnE,EAAOiG,OAAP,2BAAqBjG,EAAOiG,QAA5B,IAAoCC,KAAMF,KArBtD,iCAwBWhG,GAxBX,4CADJ,uDA2BI,SAAUW,GACN,OAAOwF,QAAQC,OAAOzF,MAU9B+D,EAAKM,aAAaqB,SAASnB,KACvB,SAACoB,GARL,IAAsBvG,EAYd,OAHI+E,EAAWM,aACXkB,EAAIvG,KAAO,CAAEwG,SAVHxG,EAUyBuG,EAAIvG,KATxCA,IAASA,EAAKsC,IACfJ,OAAOC,KAAKnC,GAAMoC,KAAI,SAACqE,GAAD,sBACfzG,EAAKyG,OAEZzG,KAOKuG,KAEX,SAAU3F,GAUN,OARIA,EAAM0F,UACN1F,EAAM0F,SAASI,QAAU,KACzB9F,EAAM0F,SAASI,OAAS,MAGxBC,QAAQC,IAAIhG,GACZiG,IAAMjG,MAAM,qCAETwF,QAAQC,OAAOzF,MAG9B,IAOekG,EAPK,CAChBC,IAAKpC,EAAKoC,IACVpB,KAAMhB,EAAKgB,KACXqB,IAAKrC,EAAKqC,IACVC,OAAQtC,EAAKsC,OACbC,MAAOvC,EAAKuC,OCtEVC,EAAe,QA4BNC,EA1BK,CAChBL,IAAI,WAAD,4BAAE,8BAAA3B,EAAA,sEACsB0B,EAAYC,IAAII,GADtC,uBACOnH,EADP,EACOA,KADP,kBAEMA,GAFN,2CAAF,kDAAC,GAIJ6E,OAAO,WAAD,4BAAE,WAAOwC,GAAP,iBAAAjC,EAAA,sEACmB0B,EAAYE,IAC/BG,EAAeE,EAAQ/E,IACvB+E,GAHA,uBACIrH,EADJ,EACIA,KADJ,kBAKGA,GALH,2CAAF,mDAAC,GAOPsH,eAAe,WAAD,4BAAE,8BAAAlC,EAAA,sEACW0B,EAAYC,IAC/BI,EAAehD,EAAoBK,aAF3B,uBACJxE,EADI,EACJA,KADI,kBAILA,GAJK,2CAAF,kDAAC,GAMfuH,WAAW,WAAD,4BAAE,WAAOF,GAAP,iBAAAjC,EAAA,sEACe0B,EAAYI,MAC/BC,EAAehD,EAAoBK,YADhB,eAEd6C,IAHD,uBACArH,EADA,EACAA,KADA,kBAKDA,GALC,2CAAF,mDAAC,ICbF0F,EAAWd,IAAMC,OAAO,CACjCC,QAAS,6CACToB,OAAQ,CACJO,IAAKe,oJAAYC,0BAGnBC,EAAcC,IAAMC,gBAEbC,EAAU,WACnB,OAAOC,qBAAWJ,IAgJPK,EA7IM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACJ9G,wBAAS+G,GADL,mBAC5BC,EAD4B,KACfC,EADe,OAETjH,mBAAS,MAFA,mBAE5BN,EAF4B,KAErBwH,EAFqB,OAGHlH,oBAAS,GAHN,mBAG5BmH,EAH4B,KAGjBC,EAHiB,KAI7BpF,EAAUC,cAJmB,4CAMnC,uCAAAiC,EAAA,6DAAuBmD,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,SAA9B,kBAE+B9C,EAASC,KAAT,8BAEnB,CACI4C,QACAC,WACAC,mBAAmB,IAPnC,uBAUQhF,EAVR,EAEgBzD,MAFhB,SAWc0I,IAXd,4DAaQC,EAAa,EAAD,IAbpB,EAckC,KAAMrC,SAAStG,KAAKY,MAAtCgI,EAdhB,EAcgBA,KAAMlI,EAdtB,EAcsBA,QACdiG,QAAQC,IAAIgC,EAAMlI,GACL,MAATkI,EAhBZ,sBAiBoBlI,EAjBpB,OAkBqB,qBAlBrB,+BAmB0B,IAAImI,MAAM,+KAnBpC,cAsB0B,IAAIA,MACN,gQAvBxB,2DANmC,sBAwCnC,SAASC,EAAUC,EAAKC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAzCrB,4CA2CnC,2CAAA3D,EAAA,6DAAwBmD,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,SAAaY,EAA5C,sDAE+B1D,EAASC,KAAT,kBAAiC,CACpD4C,QACAC,WACAC,mBAAmB,IAL/B,uBAOQhF,EALQzD,EAFhB,EAEgBA,MAFhB,SAScqJ,EAAW,aACb/G,IAAKtC,EAAK4D,QACV2E,QACAe,KAAMR,EAAU,EAAG,GACnBS,kBAAmBT,EAAU,EAAG,KAChCU,MAAM,8CAAD,QACDP,KAAKE,SAAW,GAEfM,SAAS,IACTC,UAAU,GAJV,SAKFN,IAnBf,4DAsBQT,EAAa,EAAD,IAtBpB,EAuBkC,KAAMrC,SAAStG,KAAKY,MAAtCgI,EAvBhB,EAuBgBA,KAAMlI,EAvBtB,EAuBsBA,QACdiG,QAAQC,IAAIgC,EAAMlI,GACL,MAATkI,EAzBZ,oBA0B4B,iBAAZlI,EA1BhB,sBA2BoC,CAChB6H,MAAO,wMA5B3B,2DA3CmC,kEA+EnC,WAA0BoB,GAA1B,iBAAAvE,EAAA,+EAEkCgC,EAAYG,WAAWoC,GAFzD,uBAEgBnD,EAFhB,EAEgBA,QACR2B,EAAQ3B,GAHhB,kBAIeA,GAJf,gCAMQmC,EAAa,EAAD,IANpB,0DA/EmC,+BAyFpBU,EAzFoB,8EAyFnC,WAA0BrJ,GAA1B,iBAAAoF,EAAA,+EAEkCgC,EAAYvC,OAAO7E,GAFrD,gBAEgBwG,EAFhB,EAEgBA,QACRG,QAAQC,IAAIJ,GACZ2B,EAAQ3B,GAJhB,gDAMQmC,EAAa,EAAD,IANpB,0DAzFmC,sBAkGnC,SAASA,EAAa/H,GAAQ,IAClBF,EAAYE,EAAM0F,SAAStG,KAA3BU,QACR0H,EAAS1H,GApGsB,SAsGpBgI,IAtGoB,2EAsGnC,8BAAAtD,EAAA,+EAEkCgC,EAAYE,iBAF9C,gBAEgBd,EAFhB,EAEgBA,QACR2B,EAAQ3B,GAHhB,gDAKQmC,EAAa,EAAD,IALpB,yBAOQL,GAAW,GAPnB,6EAtGmC,sBA6HnC,OAbAsB,qBAAU,WACFzF,EAAoBC,iBACpBsE,IAEAJ,GAAW,KAEhB,IACHsB,qBAAU,WACQ,OAAVhJ,IACAiG,YAAMjG,GACNwH,EAAS,SAEd,CAACxH,IAEA,cAAC8G,EAAYmC,SAAb,CACIpJ,MAAO,CAAEqJ,OA/HkB,4CA+HVC,MA/HU,4CA+HH7B,cAAa8B,OA5F7C,WACI7F,EAAoBM,iBACpB0D,EAAQ,MACRjF,EAAQ+G,KAAK,MAyFoC1C,WA/HlB,6CA8H/B,SAGMc,EAAuB,aAAXL,KC7IXkC,EANW,CACtBnD,IAAI,WAAD,4BAAE,4BAAA3B,EAAA,sEACiB0B,EAAYC,IAJX,eAGlB,cACKoD,EADL,yBAEMA,EAAInK,MAFV,2CAAF,kDAAC,ICAFoK,EAAoBzC,IAAMC,gBAEnByC,EAAiB,WAC1B,OAAOvC,qBAAWsC,IAGTE,EAAqB,SAAC,GAAkB,IAAhBtC,EAAe,EAAfA,SAAe,EAChB9G,oBAAS,GADO,mBACzCmH,EADyC,KAC9BC,EAD8B,OAEVpH,mBAAS,IAFC,mBAEzCqJ,EAFyC,KAE5BC,EAF4B,OAGtBtJ,mBAAS,MAHa,mBAGzCN,EAHyC,KAGlCwH,EAHkC,KAchD,SAASO,EAAa/H,GAAQ,IAClBF,EAAYE,EAAM0F,SAAStG,KAA3BU,QACR0H,EAAS1H,GAhBmC,4CAsBhD,8BAAA0E,EAAA,+EAEkC8E,EAAkBnD,MAFpD,gBAEgBP,EAFhB,EAEgBA,QACRgE,EAAehE,GACf8B,GAAW,GAJnB,gDAMQK,EAAa,EAAD,IANpB,0DAtBgD,sBAgChD,OA5BAiB,qBAAU,WACQ,OAAVhJ,IACAiG,YAAMjG,GACNwH,EAAS,SAEd,CAACxH,IAEJgJ,qBAAU,YAXsC,mCAY5Ca,KACD,IAoBC,cAACL,EAAkBP,SAAnB,CACIpJ,MAAO,CAAE4H,YAAWkC,cAAaG,cAhBzC,SAAuBnJ,GACnB,OAAOgJ,EAAYI,MAAK,SAACC,GAAD,OAAOA,EAAEtI,MAAQf,OAczC,SAGKyG,KCtCE6C,EANQ,CACnBC,SAAS,WAAD,4BAAE,8BAAA1F,EAAA,sEACiB0B,EAAYC,IAJnB,YAGV,uBACE/G,EADF,EACEA,KADF,kBAECA,GAFD,2CAAF,kDAAC,ICCP+K,EAAkBpD,IAAMC,gBAEjBoD,EAAe,WACxB,OAAOlD,qBAAWiD,IAGTE,EAAoB,SAAC,GAAkB,IAAhBjD,EAAe,EAAfA,SAAe,EACb9G,mBAAS,IADI,mBACxCgK,EADwC,KAC7BC,EAD6B,OAErBjK,mBAAS,MAFY,mBAExCN,EAFwC,KAEjCwH,EAFiC,OAGflH,oBAAS,GAHM,mBAGxCmH,EAHwC,KAG7BC,EAH6B,KAK/CsB,qBAAU,YACY,uCAAG,8BAAAxE,EAAA,+EAEayF,EAAeC,WAF5B,gBAELtE,EAFK,EAELA,QACR2E,EAAa3E,GACb8B,GAAW,GAJE,gDAMbK,EAAa,EAAD,IANC,yDAAH,qDASlByC,KACD,IAKH,SAASzC,EAAa/H,GAAQ,IAClBF,EAAYE,EAAM0F,SAAStG,KAA3BU,QACR0H,EAAS1H,GASb,OAPAkJ,qBAAU,WACQ,OAAVhJ,IACAiG,YAAMjG,GACNwH,EAAS,SAEd,CAACxH,IAGA,cAACmK,EAAgBlB,SAAjB,CACIpJ,MAAO,CACHyK,YACAG,WAnBO,SAAC9J,GAChB,OAAO2J,EAAUP,MAAK,SAACW,GAAD,OAAOA,EAAEhJ,MAAQf,MAmB/B8G,aAJR,SAOKL,KClDEuD,ECWM,WAAO,IAAD,EACa1D,IAA5BK,EADe,EACfA,YAAaX,EADE,EACFA,WACbgD,EAAgBF,IAAhBE,YACAW,EAAcF,IAAdE,UACFhI,EAAUC,cAJO,EAKWjC,oBAAS,GALpB,mBAKhBmH,EALgB,KAKLmD,EALK,OAMCtK,mBAAS,CAC7BqH,MAAO,GACPC,SAAU,GACViD,WAAY,GACZC,IAAK,OACLR,UAAW,KAXQ,mBAMhBlL,EANgB,KAMV2L,EANU,OAaKzK,mBAAS,IAbd,mBAahBhB,EAbgB,KAaR0L,EAbQ,KAejBC,EAAyB,SAAC7L,GAC5B,OAAOkL,EACFY,QAAO,SAACC,GAAD,OAAU/L,EAAKgM,SAASD,EAAKzJ,QACpCF,KAAI,SAACkJ,GAAD,MAAQ,CAAE7K,MAAO6K,EAAEhJ,IAAKxB,MAAOwK,EAAEtK,UAExCiL,EAA0B,SAACjM,GAC7B,OAAOuK,EAAYI,MAAK,SAACuB,GAAD,OAAUA,EAAK5J,MAAQtC,MAG7CmM,EAAgBjB,EAAU9I,KAAI,SAAC2J,GAAD,MAAW,CAC3CtL,MAAOsL,EAAKzJ,IACZxB,MAAOiL,EAAK/K,SAGVoL,EAAY,uCAAG,WAAOC,GAAP,eAAAjH,EAAA,kEAEbiH,EAAEC,iBACcnM,IAHH,wDAMPwJ,EANO,2BAON3J,GAPM,IAQTyL,WAAYzL,EAAKyL,WAAWnJ,IAC5B4I,UAAWlL,EAAKkL,UAAU9I,KAAI,SAAC2J,GAAD,OAAUA,EAAKtL,WATpC,SAYP8G,EAAW,eAAKoC,IAZT,OAabhD,QAAQC,IAAI+C,GAEZzG,EAAQ+G,KAAR,iBAAuB/B,EAAY5F,MAftB,kDAiBbqE,QAAQC,IAAR,MAjBa,0DAAH,sDAqBlBgD,qBAAU,WACN4B,GAAa,GACbG,GAAQ,8BAAC,eACFzD,GADC,IAEJgD,UAAWW,EAAuB3D,EAAYgD,WAC9CO,WAAYQ,EAAwB/D,EAAYuD,mBAErD,IAEH7B,qBAAU,WACF5J,GAAQqI,GACRmD,GAAa,KAElB,CAACxL,EAAMqI,IAEV,IAAMkE,EAAkB,CACpBhE,MAAO,CACHiE,WAAY,CACR9L,QAAS,wPAEb+L,QAAS,CACL/L,QAAS,kHAIjBM,KAAM,CACFwL,WAAY,CACR9L,QAAS,4FAIrBkJ,qBAAU,kBAAMzJ,MAAY,CAACH,IAC7B,IAAM0C,EAAe,SAAClB,GAClBmK,GAAQ,SAACjK,GAAD,mBAAC,eACFA,GADC,kBAEHF,EAAOR,KAAOQ,EAAOf,YAGxBN,EAAW,WACb,IAAMD,EAASH,EAAUC,EAAMuM,GAE/B,OADAX,EAAU1L,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,QAEzBkM,EAAyC,IAA/BxK,OAAOC,KAAKjC,GAAQM,OACpC,OACI,sBAAKa,UAAU,iBAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,kCAAf,UACMgH,GAAanG,OAAOC,KAAKoI,GAAa/J,OAAS,EAC7C,uBAAMmM,SAAUP,EAAhB,UACI,cAAC,EAAD,CACItL,MAAM,qBACNE,KAAK,OACLP,MAAOT,EAAKgB,KACZC,SAAUyB,EACV9B,MAAOV,EAAOc,OAElB,cAAC,EAAD,CACIF,MAAM,oGACNE,KAAK,QACLP,MAAOT,EAAKuI,MACZtH,SAAUyB,EACV9B,MAAOV,EAAOqI,QAElB,cAAC,EAAD,CACIzH,MAAM,uHACNe,cAAc,YACdb,KAAK,aACLc,QAASyI,EACTtJ,SAAUyB,EACVjC,MAAOT,EAAKyL,WACZ7K,MAAOV,EAAOuL,aAElB,cAAC,EAAD,CACI3J,QAAS,CACL,CAAEd,KAAM,OAAQP,MAAO,QACvB,CAAEO,KAAM,SAAUP,MAAO,UACzB,CAAEO,KAAM,QAASP,MAAO,UAE5BA,MAAOT,EAAK0L,IACZ1K,KAAK,MACLC,SAAUyB,EACV5B,MAAM,2FAEV,cAAC,EAAD,CACI+B,aAAc7C,EAAKkL,UACnBpJ,QAASqK,EACTlL,SAAUyB,EACVkK,QAAM,EACN5L,KAAK,YACLF,MAAM,+HAEV,wBACIC,KAAK,SACLwB,UAAWmK,EACXrL,UAAU,gCAHd,iEASJ,qBC/GTwL,EAjDE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACV5J,EAAUC,cACR+E,EAAgBL,IAAhBK,YAIR,OACI,qBAAK7G,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACK6G,EAAY5F,MAAQwK,EAAKxK,KACtB,wBACIjB,UAAU,qDACVI,QATA,WAChByB,EAAQ+G,KAAK/G,EAAQ6J,SAASC,SAAW,UAM7B,SAII,mBAAG3L,UAAU,iBAGrB,sBAAKA,UAAU,sEAAf,UACI,qBACI4L,IAAKH,EAAKtD,MACVnI,UAAU,iBACV6L,MAAM,QAEV,sBAAK7L,UAAU,OAAf,UACI,6BAAKyL,EAAK9L,OACV,mBAAGK,UAAU,sBAAb,SACKyL,EAAKrB,WAAWzK,OAErB,sBAAKK,UAAU,aAAf,UACI,mBACIA,UAAU,qCACV8L,KAAK,WAET,mBACI9L,UAAU,gCACV8L,KAAK,WAET,sBAAM9L,UAAU,OAAhB,SAAwByL,EAAKxD,sBCvB1C8D,EAfC,SAAC,GAAY,IAAV7L,EAAS,EAATA,GACP8J,EAAeL,IAAfK,WACR1E,QAAQC,IAAIyE,EAAW9J,IAFC,MAGK8J,EAAW9J,GAAhCe,EAHgB,EAGhBA,IAAK+K,EAHW,EAGXA,MAAOrM,EAHI,EAGJA,KACpB,OACI,sBAAMK,UAAW,gBAAkBgM,EAAnC,SACKrM,GAD0CsB,ICPxCgL,GCIO,SAAC,GAAmB,IAAjBpC,EAAgB,EAAhBA,UAErB,OADsBF,IAAd3C,UACc,cAElB,mCACK6C,EAAU9I,KAAI,SAAC2J,GAAD,OACX,cAAC,EAAD,CAAoBxK,GAAIwK,GAAVA,SCWfwB,GAlBO,SAAC,GAAc,IAAZvN,EAAW,EAAXA,KACrB,OACI,qBAAKqB,UAAU,YAAf,SACI,sBAAKA,UAAU,kEAAf,UACI,oBAAIA,UAAU,aAAd,SACI,+CAEJ,mBAAGA,UAAU,YAAb,SACI,cAAC,GAAD,CAAW6J,UAAWlL,YCO3BwN,GAjBM,SAAC,GAAe,IAAb/M,EAAY,EAAZA,MACpB,OACI,qBAAKY,UAAU,YAAf,SACI,sBAAKA,UAAU,kEAAf,UACI,oBAAIA,UAAU,aAAd,SACI,wDAGJ,oBAAIA,UAAU,YAAd,SAA2BZ,U,oBCVpC,SAASgN,GAAYzN,GACxB,IAAM0N,EAAO,IAAI3J,KAAK4J,SAAS3N,IACzB4N,EAAU,IAAI7J,KAEpB,GAAgB,IADA6J,EAAQC,cAAgBH,EAAKG,cAC1B,CAEf,GAAe,IADAD,EAAQE,SAAWJ,EAAKI,SACrB,CAEd,GAAgB,IADAF,EAAQG,WAAaL,EAAKK,WACvB,CACf,IAAMC,EAAaJ,EAAQK,aAAeP,EAAKO,aAE/C,OAAID,GAAc,GAAKA,EAAa,EAAU,wEAC1CA,GAAc,GAAKA,EAAa,GAAW,kEAC3CA,GAAc,IAAMA,EAAa,GAC1B,mEAEJ,mEAEX,MAAM,GAAN,OAAUN,EAAKK,WAAf,YAA6BL,EAAKO,cAGtC,MAAM,GAAN,OAAUP,EAAKI,SAAf,YAA2BJ,EAAKQ,eAAe,UAAW,CACtDC,MAAO,UAGf,OACIT,EAAKG,cAAgB,KAAOH,EAAKU,WAAa,GAAK,IAAMV,EAAKW,UCrBtE,IAAMC,GAAc3G,IAAMC,gBAEb2G,GAAU,WACnB,OAAOzG,qBAAWwG,KA+CPE,GA5CM,SAAC,GAAkB,IAAhBxG,EAAe,EAAfA,SAAe,EACT9G,mBAAS,IADA,mBAC5BuN,EAD4B,KACrBC,EADqB,OAEHxN,oBAAS,GAFN,mBAE5BmH,EAF4B,KAEjBC,EAFiB,OAGTpH,mBAAS,MAHA,mBAG5BN,EAH4B,KAGrBwH,EAHqB,iDAOnC,8BAAAhD,EAAA,+EAEkCgC,EAAYL,MAF9C,gBAEgBP,EAFhB,EAEgBA,QACRkI,EAASlI,GACT8B,GAAW,GAJnB,gDAMQK,EAAa,EAAD,IANpB,0DAPmC,sBAsBnC,SAASA,EAAa/H,GAAQ,IAClBF,EAAYE,EAAM0F,SAAStG,KAA3BU,QAER0H,EAAS1H,GAKb,OA1BAkJ,qBAAU,YAJyB,mCAK/B+E,KACD,IAUH/E,qBAAU,WACQ,OAAVhJ,IACAiG,YAAMjG,GACNwH,EAAS,SAEd,CAACxH,IAUA,cAAC0N,GAAYzE,SAAb,CAAsBpJ,MAAO,CAAEgO,QAAOG,YAJ1C,SAAqBC,GACjB,OAAOJ,EAAM9D,MAAK,SAACmC,GAAD,OAAUA,EAAKxK,MAAQuM,OAGzC,SACMxG,EAAuB,cAAXL,KCqBX8G,GA3DC,SAAC,GAMV,IALHtI,EAKE,EALFA,QACYuI,EAIV,EAJFC,WACKzN,EAGH,EAHFe,IACAuM,EAEE,EAFFA,OACAI,EACE,EADFA,SAEQL,EAAgBL,KAAhBK,YACA1G,EAAgBL,IAAhBK,YACF4E,EAAO8B,EAAYC,GAEzB,OACI,qBAAKxN,UAAU,2BAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBACI4L,IAAKH,EAAKtD,MACVnI,UAAU,sCACV6N,IAAI,SACJhC,MAAM,KACNiC,OAAO,OAEX,qBAAK9N,UAAU,4BAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,oDAAf,UACI,oBAAGA,UAAU,QAAb,UACKyL,GAAQA,EAAK9L,KAAM,IACpB,uBAAMK,UAAU,QAAhB,eACOoM,GAAYsB,SAGtB7G,EAAY5F,MAAQuM,GACjB,wBACIxN,UAAU,oDACVI,QAAS,kBAAMwN,EAAS1N,IAF5B,SAII,mBAAGF,UAAU,oBAIzB,mBAAGA,UAAU,aAAb,SAA2BmF,mBChC5C4I,GAVM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUJ,EAAe,EAAfA,SAC9B,OAAOI,EAASjN,KAAI,SAACkN,GAAD,OAChB,cAAC,GAAD,2BAA+BA,GAA/B,IAAwCL,SAAUA,IAApCK,EAAQhN,SCHxBiN,GAAgB,SAAC,GAA6C,IAA3CzO,EAA0C,EAA1CA,MAAOE,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,MAAOQ,EAAsB,EAAtBA,SAAUL,EAAY,EAAZA,MAQnD,OACI,sBAAKS,UAAU,OAAf,UACI,wBAAOC,QAASN,EAAhB,cAAwBF,KACxB,sBAAKO,UAAU,6BAAf,UACI,0BACIE,GAAIP,EACJA,KAAMA,EACNP,MAAOA,EACPQ,SAfK,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACpBP,EAAS,CAAED,KAAMQ,EAAOR,KAAMP,MAAOe,EAAOf,SAehCY,UAZL,gBAAkBT,EAAQ,cAAgB,MAexCA,GAAS,qBAAKS,UAAU,oBAAf,SAAoCT,WAK9D2O,GAAc5N,aAAe,CACzBZ,KAAM,QAWKwO,UCqBAC,GAxDQ,SAAC,GAAkB,IAAhB7C,EAAe,EAAfA,SAAe,EACbzL,mBAAS,IADI,mBAC9BlB,EAD8B,KACxB2L,EADwB,OAETzK,mBAAS,IAFA,mBAE9BhB,EAF8B,KAEtB0L,EAFsB,KAS/BW,EAAkB,CACpB/F,QAAS,CACLgG,WAAY,CACR9L,QAAS,sKAsBrB,OACI,gCACI,6CACA,uBAAMiM,SAVO,SAACN,GAClBA,EAAEC,iBAXW,WACb,IAAMpM,EAASH,EAAUC,EAAMuM,GAG/B,OADAX,EAAU1L,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,OAQXL,KAEhBwM,EAAS3M,GAPT2L,EAAQ,IACRC,EAAU,MAYN,UACI,cAAC,GAAD,CACInL,MAAOT,EAAKwG,SAAW,GACvBvF,SArCK,SAACO,GAClBmK,GAAQ,SAACjK,GAAD,mBAAC,eACFA,GADC,kBAEHF,EAAOR,KAAOQ,EAAOf,YAmCdO,KAAK,UACLF,MAAM,yDACNF,MAAOV,EAAOsG,UAElB,qBAAKnF,UAAU,6BAAf,SACI,wBAAQA,UAAU,kBAAlB,+FCjDL+N,M,kBCDTK,GAAkB,WAwBTC,GAtBQ,CACnBC,cAAc,WAAD,4BAAE,WAAOtI,GAAP,iBAAAjC,EAAA,sEACY0B,EAAYE,IAC/ByI,GAAkBpI,EAAQ/E,IAC1B+E,GAHO,uBACHrH,EADG,EACHA,KADG,kBAKJA,GALI,2CAAF,mDAAC,GAOd4P,YAAY,WAAD,4BAAE,WAAOC,GAAP,iBAAAzK,EAAA,sEACc0B,EAAYC,IAAI0I,GAAiB,CACpDvJ,OAAQ,CACJ4J,QAAS,WACTC,QAAQ,IAAD,OAAMF,EAAN,QAJN,uBACD7P,EADC,EACDA,KADC,kBAOFA,GAPE,2CAAF,mDAAC,GASZgQ,cAAc,WAAD,4BAAE,WAAOC,GAAP,iBAAA7K,EAAA,sEACY0B,EAAYG,OAAOwI,GAAkBQ,GADjD,uBACHjQ,EADG,EACHA,KADG,kBAEJA,GAFI,2CAAF,mDAAC,ICZZkQ,GAAkBvI,IAAMC,gBAMjBuI,GAAmB,SAAC,GAAkB,IAAhBnI,EAAe,EAAfA,SACvB6G,EAAWuB,cAAXvB,OACA3G,EAAgBL,IAAhBK,YAFsC,EAGdhH,oBAAS,GAHK,mBAGvCmH,EAHuC,KAG5BC,EAH4B,OAIdpH,mBAAS,IAJK,mBAIvCmO,EAJuC,KAI7BgB,EAJ6B,OAKpBnP,mBAAS,MALW,mBAKvCN,EALuC,KAKhCwH,EALgC,iDAS9C,WAA6BpI,GAA7B,mBAAAoF,EAAA,6DACIuB,QAAQC,IAAI5G,GACNsP,EAFV,2BAGWtP,GAHX,IAIQsC,IAAKgO,eACLT,OAAQhB,EACRG,WAAYjL,KAAK0B,MACjBoJ,OAAQ3G,EAAY5F,MAP5B,kBAUkCoN,GAAeC,cAAcL,GAV/D,gBAUgB9I,EAVhB,EAUgBA,QACR6J,GAAY,SAAC3O,GAAD,6BAAmBA,GAAnB,CAA8B8E,OAXlD,kDAaQmC,EAAa,EAAD,IAbpB,2DAT8C,kEAyB9C,8BAAAvD,EAAA,+EAEkCsK,GAAeE,YAAYf,GAF7D,gBAEgBrI,EAFhB,EAEgBA,QACR6J,EAAY7J,GAHpB,gDAKQmC,EAAa,EAAD,IALpB,yBAOQL,GAAW,GAPnB,6EAzB8C,kEAyC9C,WAA6B/G,GAA7B,eAAA6D,EAAA,+EAEkCsK,GAAeM,cAAczO,GAF/D,gBAGwB,OAHxB,EAEgBiF,SAEJ6J,GAAY,SAAC3O,GAAD,OACRA,EAAUoK,QAAO,SAACyE,GAAD,OAAOA,EAAEjO,MAAQf,QALlD,gDASQoH,EAAa,EAAD,IATpB,0DAzC8C,sBAqD9C,SAASA,EAAa/H,GAAQ,IAClBF,EAAYE,EAAM0F,SAAStG,KAA3BU,QACR0H,EAAS1H,GAEb,OAnDAkJ,qBAAU,YANoC,mCAO1CgG,KACD,CAACf,IA2BJjF,qBAAU,WACQ,OAAVhJ,IACAiG,YAAMjG,GACNwH,EAAS,SAEd,CAACxH,IAkBA,cAACsP,GAAgBrG,SAAjB,CACIpJ,MAAO,CAAE4O,WAAUM,cA3DmB,4CA2DJtH,YAAW2H,cA3DP,6CA0D1C,SAGKhI,KC7BEwI,GAzCE,WAAO,IAAD,EDMZ1I,qBAAWoI,ICLVP,EADW,EACXA,cAAeN,EADJ,EACIA,SAAUW,EADd,EACcA,cAe3BS,EAAiBX,mBAAQT,EAAU,CAAC,cAAe,CAAC,SAC1D,OACI,qCACI,sBAAKhO,UAAU,YAAf,UACK,IACD,qBAAKA,UAAU,aAAf,SACI,cAAC,GAAD,CAAgBsL,SAnBX,SAAC3M,GAClB2P,EAAc3P,WAqBTyQ,EAAejQ,OAAS,GACrB,qBAAKa,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,0CACA,uBACA,cAAC,GAAD,CACIgO,SAAUoB,EACVxB,SAvBI,SAAC1N,GACzByO,EAAczO,GACdoF,QAAQC,IAAIrF,eCfLmP,GCQE,SAAC,GAAgB,IAAd7B,EAAa,EAAbA,OAEV/B,GAAO8B,EADWL,KAAhBK,aACiBC,GACzB,OAAI/B,EAEI,qBAAKzL,UAAU,YAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,cAAC,EAAD,CAAUyL,KAAMA,IAChB,cAAC,GAAD,CAAe9M,KAAM8M,EAAK5B,YAC1B,cAAC,GAAD,CAAczK,MAAOqM,EAAKvD,uBAE9B,qBAAKlI,UAAU,WAAf,SACI,cAAC,GAAD,UACI,cAAC,GAAD,aAOb,0CC3Bf,IAqCesP,GArCI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAChDC,EAAa/H,KAAKgI,KAAKL,EAAaC,GAC1C,GAAmB,IAAfG,EAAkB,OAAO,KAC7B,IAAME,EAAQC,KAAEC,MAAM,EAAGJ,EAAa,GAEtC,OACI,8BACI,oBAAI3P,UAAU,aAAd,SACK6P,EAAM9O,KAAI,SAACiP,GAAD,OACP,oBACIhQ,UACI,cACCgQ,IAASN,EAAc,SAAW,IAH3C,SAOI,wBACI1P,UAAU,YACVI,QAAS,WACLqP,EAAaO,IAHrB,SAMKA,KARA,QAAUA,WCdjCC,GAAY,SAAC,GAMZ,IALHC,EAKE,EALFA,MACAC,EAIE,EAJFA,cACAC,EAGE,EAHFA,gBACAC,EAEE,EAFFA,aACAC,EACE,EADFA,aAEA,OAAK3P,MAAMC,QAAQsP,GAoBf,oBAAIlQ,UAAU,aAAd,SACKkQ,EAAMnP,KAAI,SAACwP,GAAD,OACP,oBAEIvQ,UACI,mBACCuQ,IAASD,EAAe,UAAY,IAEzClQ,QAAS,kBAAMiQ,EAAaE,IAC5BzE,KAAK,SAPT,SASKyE,EAAKH,IARDG,EAAKJ,SArBlB,oBAAInQ,UAAU,aAAd,SACKa,OAAOC,KAAKoP,GAAOnP,KAAI,SAACwP,GAAD,OACpB,oBAEIvQ,UACI,mBACCkQ,EAAMK,KAAUD,EAAe,UAAY,IAEhDlQ,QAAS,kBAAMiQ,EAAaH,EAAMK,KAClCzE,KAAK,SAPT,SASKoE,EAAMK,GAAMH,IARRF,EAAMK,GAAMJ,UAgCzCF,GAAU3P,aAAe,CACrB6P,cAAe,MACfC,gBAAiB,QAUNH,UC/BAO,GA1BM,SAAC,GAAgB,IAAdrR,EAAa,EAAbA,OAUpB,OACI,6BACI,sBACIa,UAAW,UAAYb,EAAS,EAAI,aAAe,aADvD,SAGKA,EAAS,EAAT,UACQA,EAAS,IAfT,SAACsR,GAClB,IAAMC,EAAUC,OAAOF,EAAOrI,WAAWjE,OAAO,IAChD,OAAIsM,EAAS,GAAKA,EAAS,IAGX,IAAZC,EAFO,wFAGP,CAAC,EAAG,EAAG,GAAGE,QAAQF,IAAY,EAAU,8FACrC,wFAQyBG,CAAa1R,GADpC,uFAEK,oICNP2R,GAXE,SAAC,GAAyB,IAAvBzL,EAAsB,EAAtBA,OAAW0C,EAAW,0BACtC,OACI,kDAAYA,GAAZ,aACI,mBAAG/H,UAAW,kBAAoBqF,EAAS,cAAgB,UC4BxD0L,GA7BG,SAAC,GAAuB,IAArBpS,EAAoB,EAApBA,KAAMqS,EAAc,EAAdA,QACjBC,EAAgB,SAACV,EAAMW,GACzB,GAAIF,EAAQE,GAAQC,UAAW,CAC3B,IAAMA,EAAYH,EAAQE,GAAQC,UAClC,MAAyB,oBAAdA,EACAA,EAAUZ,GAEdY,EAEX,OAAOrB,KAAEpK,IAAI6K,EAAMS,EAAQE,GAAQE,OAEvC,OACI,gCACKzS,EAAKoC,KAAI,SAACwP,GAAD,OACN,6BACK1P,OAAOC,KAAKkQ,GAASjQ,KAAI,SAACmQ,GAAD,OACtB,6BAAkBD,EAAcV,EAAMW,IAA7BA,OAFRX,EAAKtP,WCkCfoQ,GAlDK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,aAAcP,EAAc,EAAdA,QAWnCQ,EAAiB,SAACD,EAAcE,GAClC,OAAIF,EAAaH,OAASK,EACK,QAAvBF,EAAaG,MACN,mBAAG1R,UAAU,0BAEb,mBAAGA,UAAU,wBAGrB,MAGX,OACI,gCACI,6BACKa,OAAOC,KAAKkQ,GAASjQ,KAAI,SAACmQ,GAAD,OACtB,qBAEI9Q,QACI4Q,EAAQE,GAAQE,KACV,kBA7BVb,EA6B2BS,EAAQE,GAAQE,UA5BvDG,EAAaH,OAASb,EACtBe,EAAO,2BACAC,GADD,IAEFG,MAA8B,QAAvBH,EAAaG,MAAkB,OAAS,SAGnDJ,EAAO,CAAEF,KAAMb,EAAMmB,MAAO,SAPjB,IAACnB,QA8BU3J,EAEJkF,KAAMkF,EAAQE,GAAQE,MAAQ,SACpCO,MAAM,MARV,UAUKX,EAAQE,GAAQvR,KAAM,IACtB6R,EAAeD,EAAcP,EAAQE,GAAQE,QAVzCF,WCzBdU,GCCD,SAAC,GAAuD,IAArDN,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,aAAcP,EAA8B,EAA9BA,QAASrS,EAAqB,EAArBA,KAAMgI,EAAe,EAAfA,SAClD,OACI,uBAAO3G,UAAU,QAAjB,SACK2G,GACG,qCACI,cAAC,GAAD,CAAmB2K,SAAQC,eAAcP,YACzC,cAAC,GAAD,CAAiBA,UAASrS,e,QCE/BkT,GAVI,SAAC,GAAY,IAAV3R,EAAS,EAATA,GAAS,EACU8I,IAA7BhC,EADmB,EACnBA,UACF6D,GAAOxB,EAFc,EACRA,eACQnJ,GAC3B,OAAK8G,EAES,cADH,4BAAI6D,EAAKlL,QC0DTmS,GAxDG,SAAC,GAMZ,IALH1E,EAKE,EALFA,MACAkE,EAIE,EAJFA,OACAC,EAGE,EAHFA,aACAQ,EAEE,EAFFA,iBAGMf,GADJ,oEACc,CACZrR,KAAM,CACFyR,KAAM,OACNzR,KAAM,qBACNwR,UAAW,SAAC1F,GAAD,OACP,cAAC,KAAD,CAAMuG,GAAE,iBAAYvG,EAAKxK,KAAzB,SAAiCwK,EAAK9L,SAG9CkK,UAAW,CACPlK,KAAM,mDACNwR,UAAW,SAAC1F,GAAD,OAAU,cAAC,GAAD,CAAW5B,UAAW4B,EAAK5B,cAEpDX,YAAa,CACTvJ,KAAM,yDACNwR,UAAW,SAAC1F,GAAD,OAAU,cAAC,GAAD,CAAYvL,GAAIuL,EAAKrB,eAE9ClC,kBAAmB,CACfkJ,KAAM,oBACNzR,KAAM,oFAEVsI,KAAM,CAAEmJ,KAAM,OAAQzR,KAAM,wCAC5BsS,SAAU,CACNb,KAAM,WACNzR,KAAM,yDACNwR,UAAW,SAAC1F,GAAD,OACP,cAAC,GAAD,CACIpG,OAAQoG,EAAKwG,SACb7R,QAAS,kBAAM2R,EAAiBtG,EAAKxK,YAKrD,OACI,cAAC,GAAD,CACIqQ,OAAQA,EACRC,aAAcA,EACdP,QAASA,EACTrS,KAAMyO,KCpDH8E,GCUO,WAAO,IACjB9E,EAAUF,KAAVE,MACAvG,EAAgBL,IAAhBK,YAFgB,EAG+BmC,IAApCmJ,EAHK,EAGhBnL,UAA+BkC,EAHf,EAGeA,YAHf,EAIcrJ,mBAAS,GAJvB,mBAIjB6P,EAJiB,KAIJ0C,EAJI,OAKcvS,mBAAS,IALvB,mBAKjBwS,EALiB,KAKJC,EALI,OAMgBzS,qBANhB,mBAMjB0S,EANiB,KAMHC,EANG,OAOI3S,mBAAS,CAAEuR,KAAM,OAAQM,MAAO,QAPpC,mBAOjBe,EAPiB,KAOTC,EAPS,KAyBxBnK,qBAAU,WACN6J,EAAe,KAChB,CAACG,EAAcF,IAmClB,IAjBqB1T,EAiBfgU,GAjBehU,EAiBayO,GAhBRiF,EAChB1T,EAAK8L,QACD,SAACgB,GAAD,OAGiD,IAF7CA,EAAK9L,KACAiT,cACAhC,QAAQyB,EAAYO,kBAEjCL,EACA5T,EAAK8L,QACD,SAACgB,GAAD,OACIoH,KAAKC,UAAUrH,EAAKrB,cACpByI,KAAKC,UAAUP,MAEvB5T,GACe8L,QAAO,SAACgB,GAAD,OAAUA,EAAKxK,MAAQ4F,EAAY5F,QAG7D8R,EAAQJ,EAAcxT,OAEtB6T,EC1EH,SAAkB9C,EAAO+C,EAAYzD,GACxC,IAAM0D,GAAcD,EAAa,GAAKzD,EACtC,OAAOM,KAAEI,GAAO/L,MAAM+O,GAAYC,KAAK3D,GAAUpQ,QDwE/BgU,CADEtD,KAAErB,QAAQkE,EAAe,CAACF,EAAOrB,MAAO,CAACqB,EAAOf,QAC5BhC,EAzDvB,GA8DjB,OACI,sBAAK1P,UAAU,SAAf,UACKkJ,IAAgBiJ,GACb,sBAAKnS,UAAU,uCAAf,UACI,cAAC,GAAD,CACIsQ,aAAciC,EACdrC,MAAOhH,EACPmH,aAhDW,SAACE,GACR,KAAhB8B,GAAoBC,EAAe,IACvCE,EAAgBjC,MAgDJ,wBACIvQ,UAAU,yBACVI,QAfA,WAChBoS,KAYY,uEAQR,sBAAKxS,UAAU,qBAAf,UACI,cAAC,GAAD,CAAcb,OAAQ4T,IACtB,uBACIrT,KAAK,OACLC,KAAK,cACL0T,YAAY,YACZzT,SA5DU,SAAC,GAAgB,IAAdO,EAAa,EAAbA,OACzBqS,OAAgB5L,GAChB0L,EAAenS,EAAOf,QA2DVA,MAAOiT,IAEVU,EAAQ,GACL,cAAC,GAAD,CACI3F,MAAO4F,EACP1B,OA1DD,SAACf,GAChBmC,EAAUnC,IA0DMgB,aAAckB,EACda,SA3FC,SAAC9F,GAClBlI,QAAQC,IAAI,gBA2FIwM,iBAxFS,SAAC7R,GAC1B,IAAMqT,EAAWnG,EAAMrM,KAAI,SAAC0K,GACxB,OAAIA,EAAKxK,MAAQf,EACN,2BAAKuL,GAAZ,IAAkBwG,UAAWxG,EAAKwG,WAE/BxG,KAGXnG,QAAQC,IAAIgO,MAmFJ,qBAAKvT,UAAU,gCAAf,SACI,cAAC,GAAD,CACIuP,WAAYwD,EACZvD,SApGH,EAqGGE,YAAaA,EACbD,aAxEK,SAAC+D,GACtBpB,EAAeoB,eExBRC,GApBD,WACV,IAAM5O,EAASkK,cACPvB,EAAiB3I,EAAjB2I,OAAQkG,EAAS7O,EAAT6O,KAChB,OACI,mCACI,cAAC,GAAD,UACKlG,EACGkG,EACI,cAAC,EAAD,IAEA,cAAC,GAAD,CAAUlG,OAAQA,IAGtB,cAAC,GAAD,SCmBLmG,GAnCO,SAAC,GAAgD,IAA9ChU,EAA6C,EAA7CA,KAAMP,EAAuC,EAAvCA,MAAOQ,EAAgC,EAAhCA,SAAU+G,EAAsB,EAAtBA,SAAUpH,EAAY,EAAZA,MAOtD,OACI,sBAAKS,UAAU,kBAAf,UACI,uBACIA,UALD,oBAAsBT,EAAQ,cAAgB,IAM7CG,KAAK,WACLN,MAAM,GACNc,GAAIP,EACJC,SAbS,WACjBA,EAAS,CAAED,KAAMA,EAAMP,OAAQA,KAavBkC,QAASlC,IAEb,uBAAOY,UAAU,oBAAoBC,QAASN,EAA9C,SACKgH,IAEJpH,GAAS,qBAAKS,UAAU,mBAAf,SAAmCT,QC4E1CqU,GA5FG,WAAO,IAAD,EACI/T,mBAAS,CAC7BqH,MAAO,GACPC,SAAU,GACV0M,QAAQ,IAJQ,mBACblV,EADa,KACP2L,EADO,KAMdzI,EAAUC,cACR4G,EAAUlC,IAAVkC,MAPY,EAQQ7I,mBAAS,IARjB,mBAQbhB,EARa,KAQL0L,EARK,OASgB1K,mBAAS,MATzB,mBASbiU,EATa,KASDC,EATC,KAUd1S,EAAe,SAAClB,GAClBmK,GAAQ,SAACjK,GAAD,mBAAC,eACFA,GADC,kBAEHF,EAAOR,KAAOQ,EAAOf,WAE1B2U,EAAc,OAGZ7I,EAAkB,CACpBhE,MAAO,CACHiE,WAAY,CACR9L,QAAS,yPAGjB8H,SAAU,CACNgE,WAAY,CACR9L,QAAS,uLAIrBkJ,qBAAU,WACNzJ,MACD,CAACH,IACJ,IAAMG,EAAW,WACb,IAAMD,EAASH,EAAUC,EAAMuM,GAE/B,OADAX,EAAU1L,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,QAEzBkM,EAAyC,IAA/BxK,OAAOC,KAAKjC,GAAQM,OAE9B4L,EAAY,uCAAG,WAAOC,GAAP,SAAAjH,EAAA,yDACjBiH,EAAEC,iBACcnM,IAFC,0EAMP4J,EAAM/J,GANC,OAObkD,EAAQ+G,KACJ/G,EAAQ6J,SAASsI,MACXnS,EAAQ6J,SAASsI,MAAMC,KAAKtI,SAC5B,KAVG,kDAaboI,EAAc,KAAM1U,SAbP,0DAAH,sDAgBlB,OACI,uBAAMiM,SAAUP,EAAhB,UACI,cAAC,EAAD,CACItL,MAAM,oGACNE,KAAK,QACLP,MAAOT,EAAKuI,MACZtH,SAAUyB,EACV9B,MAAOV,EAAOqI,QAElB,cAAC,EAAD,CACIzH,MAAM,uCACNC,KAAK,WACLC,KAAK,WACLP,MAAOT,EAAKwI,SACZvH,SAAUyB,EACV9B,MAAOV,EAAOsI,WAElB,cAAC,GAAD,CACI/H,MAAOT,EAAKkV,OACZjU,SAAUyB,EACV1B,KAAK,SAHT,4HAOCmU,GAAc,mBAAG9T,UAAU,cAAb,SAA4B8T,IAC3C,wBACIpU,KAAK,SACLwB,UAAWmK,GAAWyI,EACtB9T,UAAU,gCAHd,wBC8FGkU,GA1KM,WACjB,IAAMrS,EAAUC,cADO,EAECjC,mBAAS,CAC7BqH,MAAO,GACPC,SAAU,GACViD,WAAY,GACZC,IAAK,OACL1K,KAAM,GACNkK,UAAW,GACXsK,SAAS,IATU,mBAEhBxV,EAFgB,KAEV2L,EAFU,KAWf7B,EAAWjC,IAAXiC,OAEFqC,EADgBnB,IAAdE,UACwB9I,KAAI,SAACkJ,GAAD,MAAQ,CACxCxK,MAAOwK,EAAEtK,KACTP,MAAO6K,EAAEhJ,QAGPmT,EADkBpL,IAAhBE,YAC4BnI,KAAI,SAACwI,GAAD,MAAQ,CAC5C9J,MAAO8J,EAAE5J,KACTP,MAAOmK,EAAEtI,QApBU,EAsBKpB,mBAAS,IAtBd,mBAsBhBhB,EAtBgB,KAsBR0L,EAtBQ,KAwBjBlJ,EAAe,SAAClB,GAClBmK,GAAQ,SAACjK,GAAD,mBAAC,eACFA,GADC,kBAEHF,EAAOR,KAAOQ,EAAOf,YAGxB8L,EAAkB,CACpBhE,MAAO,CACHiE,WAAY,CACR9L,QAAS,wPAEb+L,QAAS,CACL/L,QAAS,kHAGjBM,KAAM,CACFwL,WAAY,CACR9L,QAAS,yKAEbqI,IAAK,CACDrI,QAAS,sNACTD,MAAO,IAGf+H,SAAU,CACNgE,WAAY,CACR9L,QAAS,2LAEbgV,gBAAiB,CACbhV,QAAS,yRAEbiV,eAAgB,CACZjV,QAAS,kOAEbqI,IAAK,CACDrI,QAAS,kOACTD,MAAO,IAGfgL,WAAY,CACRe,WAAY,CACR9L,QAAS,wMAGjB8U,QAAS,CACLhJ,WAAY,CACR9L,QACI,ybAIhBkJ,qBAAU,WACNzJ,MACD,CAACH,IACJ,IAAMG,EAAW,WACb,IAAMD,EAASH,EAAUC,EAAMuM,GAE/B,OADAX,EAAU1L,GAC4B,IAA/BgC,OAAOC,KAAKjC,GAAQM,QAEzBkM,EAAyC,IAA/BxK,OAAOC,KAAKjC,GAAQM,OAE9B4L,EAAY,uCAAG,WAAOC,GAAP,eAAAjH,EAAA,yDACjBiH,EAAEC,iBACcnM,IAFC,wDAIXyV,EAJW,2BAKV5V,GALU,IAMbkL,UAAWlL,EAAKkL,UAAU9I,KAAI,SAACkJ,GAAD,OAAOA,EAAE7K,WAN1B,kBASPqJ,EAAO8L,GATA,OAUb1S,EAAQ+G,KAAK,KAVA,kDAYb2B,EAAU,EAAD,IAZI,0DAAH,sDAgBlB,OACI,uBAAMe,SAAUP,EAAhB,UACI,cAAC,EAAD,CACItL,MAAM,oGACNE,KAAK,QACLP,MAAOT,EAAKuI,MACZtH,SAAUyB,EACV9B,MAAOV,EAAOqI,QAElB,cAAC,EAAD,CACIzH,MAAM,qBACNE,KAAK,OACLP,MAAOT,EAAKgB,KACZC,SAAUyB,EACV9B,MAAOV,EAAOc,OAElB,cAAC,EAAD,CACIF,MAAM,uCACNC,KAAK,WACLC,KAAK,WACLP,MAAOT,EAAKwI,SACZvH,SAAUyB,EACV9B,MAAOV,EAAOsI,WAElB,cAAC,EAAD,CACI1H,MAAM,uHACNe,cAAc,YACdb,KAAK,aACLc,QAAS2T,EACTxU,SAAUyB,EACVjC,MAAOT,EAAKyL,WACZ7K,MAAOV,EAAOuL,aAElB,cAAC,EAAD,CACI3J,QAAS,CACL,CAAEd,KAAM,OAAQP,MAAO,QACvB,CAAEO,KAAM,SAAUP,MAAO,UACzB,CAAEO,KAAM,QAASP,MAAO,UAE5BA,MAAOT,EAAK0L,IACZ1K,KAAK,MACLC,SAAUyB,EACV5B,MAAM,2FAEV,cAAC,EAAD,CACIgB,QAASqK,EACTlL,SAAUyB,EACV1B,KAAK,YACLF,MAAM,+HAEV,eAAC,GAAD,CACIL,MAAOT,EAAKwV,QACZvU,SAAUyB,EACV1B,KAAK,UACLJ,MAAOV,EAAOsV,QAJlB,gFAMgB,yKAEhB,wBACIzU,KAAK,SACLwB,UAAWmK,EACXrL,UAAU,gCAHd,wBCzHGwU,GA7CD,WAAO,IACT9U,EAASqP,cAATrP,KADQ,EAEgBG,mBACnB,aAATH,EAAsBA,EAAO,SAHjB,mBAET+U,EAFS,KAECC,EAFD,KAKVC,EAAiB,SAAC9P,GACpB6P,GAAY,SAACrU,GAAD,MACM,aAAdA,EAA2B,QAAU,eAI7C,OACI,qBAAKL,UAAU,iBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,kCAAf,SACkB,aAAbyU,EACG,qCACI,oBAAIzU,UAAU,OAAd,sBACA,cAAC,GAAD,IACA,sDAC0B,IACtB,oBAAG8L,KAAK,SAAS1L,QAASuU,EAA1B,UACK,IADL,mBAOR,qCACI,oBAAI3U,UAAU,OAAd,mBACA,cAAC,GAAD,IACA,mDACuB,IACnB,oBAAG8L,KAAK,SAAS1L,QAASuU,EAA1B,UACK,IADL,0B,oCCsBjBC,GAtDK,WAChB,IAAMC,EACI,cADJA,EAEO,aAFPA,EAGS,QAHTA,EAIK,gBALW,EAOIhV,mBAAS,MAPb,mBAOfN,EAPe,KAORwH,EAPQ,OAQMlH,mBAASgV,GARf,mBAQfxP,EARe,KAQPyP,EARO,OASUjV,mBAAS,GATnB,mBASfkV,EATe,KASLC,EATK,OAUInV,mBAAS,GAVb,mBAUfkT,EAVe,KAURkC,EAVQ,KAWhBC,EAAehM,GAAY/J,OAAS0K,GAAU1K,OAASiO,GAAMjO,OAC7DgW,EAAiB,WACnBF,GAAS,SAAC5U,GAAD,OAAeA,EAAY,MAblB,4CA+BtB,4CAAA0D,EAAA,8EAE2BmF,IAF3B,gEAEmB2B,EAFnB,iBAGkBpF,EAAYE,IAAI,cAAgBkF,EAAK5J,IAAK4J,GAH5D,OAIYsK,IAJZ,6JAM2B/H,IAN3B,kEAMmB3B,EANnB,kBAOkBhG,EAAYE,IAAI,QAAU8F,EAAKxK,IAAKwK,GAPtD,QAQY0J,IARZ,gKAU2BtL,IAV3B,kEAUmBa,EAVnB,kBAWkBjF,EAAYE,IAAI,WAAa+E,EAAKzJ,IAAKyJ,GAXzD,QAYYyK,IAZZ,mMAeQpO,EAAS,EAAD,IACR+N,EAAUD,GAhBlB,oGA/BsB,sBAmDtB,OAvBAtM,qBAAU,YAba,WACL,IAAVwK,GAAe1N,IAAWwP,GAC1BC,EAAUD,GAEd,IAAMO,EAAcxN,KAAKC,MAAOkL,EAAQmC,EAAgB,KACpDH,EAAWK,GACXJ,GAAY,kBAAMI,KAEF,MAAhBA,GACAN,EAAUD,GAKdQ,KACD,CAACtC,IAqBG,CAAExT,QAAO+V,WAnDM,2CAmDMP,WAAU1P,WChC3BkQ,GAtBF,WAAO,IAAD,EACiCX,KAAxCrV,EADO,EACPA,MAAO+V,EADA,EACAA,WAAYP,EADZ,EACYA,SAAU1P,EADtB,EACsBA,OAIrC,OACI,sBAAKrF,UAAU,iBAAf,UACI,4CACA,qKACA,+BACI,yCAAYqF,KACZ,4CAAe0P,EAAf,OACCxV,GAAS,yCAAYA,QAE1B,yBAAQS,UAAU,kBAAkBI,QAZxB,WAChBkV,KAWI,UACK,IADL,0GCoBGE,GAjCI,WAAO,IACd3O,EAAgBL,IAAhBK,YADa,EAEKhH,oBAAS,GAFd,mBAEd4V,EAFc,KAENC,EAFM,KAMrB,OACI,sBAAK1V,UAAU,WAAWI,QAJX,WACfsV,GAAQ,SAACrV,GAAD,OAAgBA,MAGxB,UACI,sBAAKL,UAAU,gDAAf,UACI,qBAAKA,UAAU,OAAf,SAAuB6G,EAAYlH,OACnC,qBACIiM,IAAK/E,EAAYsB,MACjB0F,IAAI,SACJhC,MAAM,KACNiC,OAAO,KACP9N,UAAU,qCAGlB,sBAAKA,UAAW,uBAAyByV,EAAS,QAAU,IAA5D,UACI,cAAC,KAAD,CACIzD,GAAE,iBAAYnL,EAAY5F,KAC1BjB,UAAU,gBAFd,qBAMA,cAAC,KAAD,CAAMgS,GAAG,UAAUhS,UAAU,gBAA7B,4BCgBD2V,GAzCA,WAAO,IACV9O,EAAgBL,IAAhBK,YACR,OACI,qBAAK7G,UAAU,uBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAIA,UAAU,MAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,KAAD,CAAMA,UAAU,YAAY4V,eAAa,OAAO5D,GAAG,IAAnD,oBAIHnL,GACG,oBAAI7G,UAAU,WAAd,SACI,cAAC,KAAD,CACIA,UAAU,YACV4V,eAAa,OACb5D,GAAG,SAHP,wBAUZ,qBAAKhS,UAAU,SAAf,SACK6G,EACG,cAAC,GAAD,IAEA,cAAC,KAAD,CACI7G,UAAU,YACV4V,eAAa,OACb5D,GAAG,SAHP,2BCKT6D,GA/BQ,SAAC,GAAiD,IAApCC,EAAmC,EAA9C3E,UAAsBxK,EAAwB,EAAxBA,SAAaoB,EAAW,wCAC5DlB,EAAgBL,IAAhBK,YACR,OACI,cAAC,IAAD,2BACQkB,GADR,IAEIgO,OAAQ,SAACC,GACL,OAAKnP,EAUEiP,EAAY,cAACA,EAAD,eAAeE,IAAYrP,EARtC,cAAC,IAAD,CACIqL,GAAI,CACArG,SAAU,SACVqI,MAAO,CAAEC,KAAM+B,EAAMtK,kBCLtCuK,GARA,WAAO,IACVtN,EAAWnC,IAAXmC,OAIR,OAHAJ,qBAAU,WACNI,MACD,IACI,6CCiCIuN,OA3Bf,WACI,OACI,gCACI,eAAC,EAAD,WACI,cAAC,GAAD,IAEA,cAAC,EAAD,UACI,cAAC,EAAD,UACI,eAAC,IAAD,WACI,cAAC,GAAD,CACI9E,KAAK,yBACLD,UAAWsC,KAEf,cAAC,IAAD,CAAOrC,KAAK,gBAAgBD,UAAWqD,KACvC,cAAC,IAAD,CAAOpD,KAAK,UAAUD,UAAW8E,KACjC,cAAC,IAAD,CAAO7E,KAAK,IAAI+E,OAAK,EAAChF,UAAWoE,KACjC,cAAC,IAAD,CAAUvD,GAAG,gBAM7B,cAAC,IAAD,QC5BZoE,IAASL,OACL,cAAC,IAAMM,WAAP,UACI,cAAC,KAAD,UACI,cAAC,GAAD,QAGRC,SAASC,eAAe,SAM5BtY,M","file":"static/js/main.90cbb79d.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  name: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor=\"validationCustom04\" className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id=\"validationCustom04\"\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.name}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  label: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({\n    refreshToken,\n    idToken,\n    localId,\n    expiresIn = 3600\n}) {\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(USERID_KEY, localId);\n    localStorage.setItem(TOKEN_KEY, idToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\nexport function getAccessToken() {\n    return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(REFRESH_KEY);\n    localStorage.removeItem(EXPIRES_KEY);\n}\nexport function getTokenExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nconst localStorageService = {\n    setTokens,\n    getAccessToken,\n    getRefreshToken,\n    getTokenExpiresDate,\n    getUserId,\n    removeAuthData\n};\nexport default localStorageService;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport { httpAuth } from \"../hooks/useAuth\";\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config.url);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n            const expiresDate = localStorageService.getTokenExpiresDate();\n            const refreshToken = localStorageService.getRefreshToken();\n            if (refreshToken && expiresDate < Date.now()) {\n                const { data } = await httpAuth.post(\"token\", {\n                    grant_type: \"refresh_token\",\n                    refresh_token: refreshToken\n                });\n                localStorageService.setTokens({\n                    refreshToken: data.refresh_token,\n                    idToken: data.id_token,\n                    expiresIn: data.expires_in,\n                    localId: data.user_id\n                });\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.params = { ...config.params, auth: accessToken };\n            }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\nfunction transormData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transormData(res.data) };\n        }\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n            toast.error(\"Somthing was wrong. Try it later\");\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete,\n    patch: http.patch\n};\nexport default httpService;\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    },\n    updateUser: async (payload) => {\n        const { data } = await httpService.patch(\n            userEndpoint + localStorageService.getUserId(),\n            { ...payload }\n        );\n        return data;\n    }\n};\nexport default userService;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport localStorageService, {\n    setTokens\n} from \"../services/localStorage.service\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const httpAuth = axios.create({\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n    params: {\n        key: process.env.REACT_APP_FIREBASE_KEY\n    }\n});\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nconst AuthProvider = ({ children }) => {\n    const [currentUser, setUser] = useState(undefined);\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n    const history = useHistory();\n\n    async function logIn({ email, password }) {\n        try {\n            const { data } = await httpAuth.post(\n                `accounts:signInWithPassword`,\n                {\n                    email,\n                    password,\n                    returnSecureToken: true\n                }\n            );\n            setTokens(data);\n            await getUserData();\n        } catch (error) {\n            errorCatcher(error);\n            const { code, message } = error.response.data.error;\n            console.log(code, message);\n            if (code === 400) {\n                switch (message) {\n                    case \"INVALID_PASSWORD\":\n                        throw new Error(\"Email или пароль введены некорректно\");\n\n                    default:\n                        throw new Error(\n                            \"Слишком много попыток входа. Попробуйте позднее\"\n                        );\n                }\n            }\n        }\n    }\n    function logOut() {\n        localStorageService.removeAuthData();\n        setUser(null);\n        history.push(\"/\");\n    }\n    function randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n    async function signUp({ email, password, ...rest }) {\n        try {\n            const { data } = await httpAuth.post(`accounts:signUp`, {\n                email,\n                password,\n                returnSecureToken: true\n            });\n            setTokens(data);\n\n            await createUser({\n                _id: data.localId,\n                email,\n                rate: randomInt(1, 5),\n                completedMeetings: randomInt(0, 200),\n                image: `https://avatars.dicebear.com/api/avataaars/${(\n                    Math.random() + 1\n                )\n                    .toString(36)\n                    .substring(7)}.svg`,\n                ...rest\n            });\n        } catch (error) {\n            errorCatcher(error);\n            const { code, message } = error.response.data.error;\n            console.log(code, message);\n            if (code === 400) {\n                if (message === \"EMAIL_EXISTS\") {\n                    const errorObject = {\n                        email: \"Пользователь с таким Email уже существует\"\n                    };\n                    throw errorObject;\n                }\n            }\n        }\n    }\n\n    async function updateUser(formData) {\n        try {\n            const { content } = await userService.updateUser(formData);\n            setUser(content);\n            return content;\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    async function createUser(data) {\n        try {\n            const { content } = await userService.create(data);\n            console.log(content);\n            setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    async function getUserData() {\n        try {\n            const { content } = await userService.getCurrentUser();\n            setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    useEffect(() => {\n        if (localStorageService.getAccessToken()) {\n            getUserData();\n        } else {\n            setLoading(false);\n        }\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    return (\n        <AuthContext.Provider\n            value={{ signUp, logIn, currentUser, logOut, updateUser }}\n        >\n            {!isLoading ? children : \"Loading...\"}\n        </AuthContext.Provider>\n    );\n};\n\nAuthProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default AuthProvider;\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const req = await httpService.get(professionEndpoint);\n        return req.data;\n    }\n};\nexport default professionService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport professionService from \"../services/profession.service\";\nimport { toast } from \"react-toastify\";\n\nconst ProfessionContext = React.createContext();\n\nexport const useProfessions = () => {\n    return useContext(ProfessionContext);\n};\n\nexport const ProfessionProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [professions, setProfessions] = useState([]);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    useEffect(() => {\n        getProfessionsList();\n    }, []);\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    function getProfession(id) {\n        return professions.find((p) => p._id === id);\n    }\n\n    async function getProfessionsList() {\n        try {\n            const { content } = await professionService.get();\n            setProfessions(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    return (\n        <ProfessionContext.Provider\n            value={{ isLoading, professions, getProfession }}\n        >\n            {children}\n        </ProfessionContext.Provider>\n    );\n};\n\nProfessionProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport qualityService from \"../services/qaulity.service\";\n\nconst QualitiesContex = React.createContext();\n\nexport const useQualities = () => {\n    return useContext(QualitiesContex);\n};\n\nexport const QualitiesProvider = ({ children }) => {\n    const [qualities, setQualities] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getQualities = async () => {\n            try {\n                const { content } = await qualityService.fetchAll();\n                setQualities(content);\n                setLoading(false);\n            } catch (error) {\n                errorCatcher(error);\n            }\n        };\n        getQualities();\n    }, []);\n    const getQuality = (id) => {\n        return qualities.find((q) => q._id === id);\n    };\n\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    return (\n        <QualitiesContex.Provider\n            value={{\n                qualities,\n                getQuality,\n                isLoading\n            }}\n        >\n            {children}\n        </QualitiesContex.Provider>\n    );\n};\n\nQualitiesProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { validator } from \"../../../utils/ validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radio.Field\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useQualities } from \"../../../hooks/useQualities\";\n\nconst EditUserPage = () => {\n    const { currentUser, updateUser } = useAuth();\n    const { professions } = useProfessions();\n    const { qualities } = useQualities();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: []\n    });\n    const [errors, setErrors] = useState({});\n\n    const transformQualitiesData = (data) => {\n        return qualities\n            .filter((qual) => data.includes(qual._id))\n            .map((q) => ({ value: q._id, label: q.name }));\n    };\n    const transformProfessionData = (data) => {\n        return professions.find((prof) => prof._id === data);\n    };\n\n    const qualitiesList = qualities.map((qual) => ({\n        value: qual._id,\n        label: qual.name\n    }));\n\n    const handleSubmit = async (e) => {\n        try {\n            e.preventDefault();\n            const isValid = validate();\n            if (!isValid) return;\n\n            const formData = {\n                ...data,\n                profession: data.profession._id,\n                qualities: data.qualities.map((qual) => qual.value)\n            };\n\n            await updateUser({ ...formData });\n            console.log(formData);\n\n            history.push(`/users/${currentUser._id}`);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n        setData(() => ({\n            ...currentUser,\n            qualities: transformQualitiesData(currentUser.qualities),\n            profession: transformProfessionData(currentUser.profession)\n        }));\n    }, []);\n\n    useEffect(() => {\n        if (data && isLoading) {\n            setIsLoading(false);\n        }\n    }, [data, isLoading]);\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => validate(), [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                name=\"profession\"\n                                options={professions}\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualitiesList}\n                                onChange={handleChange}\n                                values\n                                name=\"qualities\"\n                                label=\"Выберите ваши качесвта\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nimport { useAuth } from \"../../hooks/useAuth\";\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const { currentUser } = useAuth();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                {currentUser._id === user._id && (\n                    <button\n                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                        onClick={handleClick}\n                    >\n                        <i className=\"bi bi-gear\"></i>\n                    </button>\n                )}\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={user.image}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nconst Quality = ({ id }) => {\n    const { getQuality } = useQualities();\n    console.log(getQuality(id));\n    const { _id, color, name } = getQuality(id);\n    return (\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n    );\n    // return \"something\";\n};\nQuality.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { useQualities } from \"../../../hooks/useQualities\";\n\nconst QualitiesList = ({ qualities }) => {\n    const { isLoading } = useQualities();\n    if (isLoading) return \"Loadind ...\";\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual} id={qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDay() - date.getDay();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDay()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst UserContext = React.createContext();\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n\nconst UserProvider = ({ children }) => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getUsers();\n    }, []);\n    async function getUsers() {\n        try {\n            const { content } = await userService.get();\n            setUsers(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n\n        setError(message);\n    }\n    function getUserById(userId) {\n        return users.find((user) => user._id === userId);\n    }\n    return (\n        <UserContext.Provider value={{ users, getUserById }}>\n            {!isLoading ? children : \"Loading....\"}\n        </UserContext.Provider>\n    );\n};\n\nUserProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default UserProvider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const { getUserById } = useUser();\n    const { currentUser } = useAuth();\n    const user = getUserById(userId);\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"d-flex flex-start \">\n                        <img\n                            src={user.image}\n                            className=\"rounded-circle shadow-1-strong me-3\"\n                            alt=\"avatar\"\n                            width=\"65\"\n                            height=\"65\"\n                        />\n                        <div className=\"flex-grow-1 flex-shrink-1\">\n                            <div className=\"mb-4\">\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <p className=\"mb-1 \">\n                                        {user && user.name}{\" \"}\n                                        <span className=\"small\">\n                                            - {displayDate(created)}\n                                        </span>\n                                    </p>\n                                    {currentUser._id === userId && (\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    )}\n                                </div>\n                                <p className=\"small mb-0\">{content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\n\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/ validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\r\nconst commentEndpoint = \"comment/\";\r\n\r\nconst commentService = {\r\n    createComment: async (payload) => {\r\n        const { data } = await httpService.put(\r\n            commentEndpoint + payload._id,\r\n            payload\r\n        );\r\n        return data;\r\n    },\r\n    getComments: async (pageId) => {\r\n        const { data } = await httpService.get(commentEndpoint, {\r\n            params: {\r\n                orderBy: '\"pageId\"',\r\n                equalTo: `\"${pageId}\"`\r\n            }\r\n        });\r\n        return data;\r\n    },\r\n    removeComment: async (commentId) => {\r\n        const { data } = await httpService.delete(commentEndpoint + commentId);\r\n        return data;\r\n    }\r\n};\r\nexport default commentService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"./useAuth\";\r\nimport { toast } from \"react-toastify\";\r\nimport { nanoid } from \"nanoid\";\r\nimport commentService from \"../services/comment.service\";\r\n\r\nconst CommentsContext = React.createContext();\r\n\r\nexport const useComments = () => {\r\n    return useContext(CommentsContext);\r\n};\r\n\r\nexport const CommentsProvider = ({ children }) => {\r\n    const { userId } = useParams();\r\n    const { currentUser } = useAuth();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [comments, setComments] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    useEffect(() => {\r\n        getComments();\r\n    }, [userId]);\r\n    async function createComment(data) {\r\n        console.log(data);\r\n        const comment = {\r\n            ...data,\r\n            _id: nanoid(),\r\n            pageId: userId,\r\n            created_at: Date.now(),\r\n            userId: currentUser._id\r\n        };\r\n        try {\r\n            const { content } = await commentService.createComment(comment);\r\n            setComments((prevState) => [...prevState, content]);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    async function getComments() {\r\n        try {\r\n            const { content } = await commentService.getComments(userId);\r\n            setComments(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    async function removeComment(id) {\r\n        try {\r\n            const { content } = await commentService.removeComment(id);\r\n            if (content === null) {\r\n                setComments((prevState) =>\r\n                    prevState.filter((c) => c._id !== id)\r\n                );\r\n            }\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    return (\r\n        <CommentsContext.Provider\r\n            value={{ comments, createComment, isLoading, removeComment }}\r\n        >\r\n            {children}\r\n        </CommentsContext.Provider>\r\n    );\r\n};\r\n\r\nCommentsProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import { orderBy } from \"lodash\";\nimport React from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { useComments } from \"../../hooks/useComments\";\n\nconst Comments = () => {\n    const { createComment, comments, removeComment } = useComments();\n\n    const handleSubmit = (data) => {\n        createComment(data);\n        // api.comments\n        //     .add({ ...data, pageId: userId })\n        //     .then((data) => setComments([...comments, data]));\n    };\n    const handleRemoveComment = (id) => {\n        removeComment(id);\n        console.log(id);\n        // api.comments.remove(id).then((id) => {\n        //     setComments(comments.filter((x) => x._id !== id));\n        // });\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { CommentsProvider } from \"../../../hooks/useComments\";\n\nconst UserPage = ({ userId }) => {\n    const { getUserById } = useUser();\n    const user = getUserById(userId);\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <CommentsProvider>\n                            <Comments />\n                        </CommentsProvider>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    if (pagesCount === 1) return null;\n    const pages = _.range(1, pagesCount + 1);\n\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => {\n                                onPageChange(page);\n                            }}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React, { useProfessions } from \"../../hooks/useProfession\";\nimport PropTypes from \"prop-types\";\n\nconst Profession = ({ id }) => {\n    const { isLoading, getProfession } = useProfessions();\n    const prof = getProfession(id);\n    if (!isLoading) {\n        return <p>{prof.name}</p>;\n    } else return \"loading ...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst UsersListPage = () => {\n    const { users } = useUser();\n    const { currentUser } = useAuth();\n    const { isLoading: professionsLoading, professions } = useProfessions();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        console.log(\"delete user\");\n        // setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    function filterUsers(data) {\n        const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter(\n                  (user) =>\n                      JSON.stringify(user.profession) ===\n                      JSON.stringify(selectedProf)\n              )\n            : data;\n        return filteredUsers.filter((user) => user._id !== currentUser._id);\n    }\n    const filteredUsers = filterUsers(users);\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    const clearFilter = () => {\n        setSelectedProf();\n    };\n\n    return (\n        <div className=\"d-flex\">\n            {professions && !professionsLoading && (\n                <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                    <GroupList\n                        selectedItem={selectedProf}\n                        items={professions}\n                        onItemSelect={handleProfessionSelect}\n                    />\n                    <button\n                        className=\"btn btn-secondary mt-2\"\n                        onClick={clearFilter}\n                    >\n                        Очиститть\n                    </button>\n                </div>\n            )}\n            <div className=\"d-flex flex-column\">\n                <SearchStatus length={count} />\n                <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    placeholder=\"Search...\"\n                    onChange={handleSearchQuery}\n                    value={searchQuery}\n                />\n                {count > 0 && (\n                    <UserTable\n                        users={usersCrop}\n                        onSort={handleSort}\n                        selectedSort={sortBy}\n                        onDelete={handleDelete}\n                        onToggleBookMark={handleToggleBookMark}\n                    />\n                )}\n                <div className=\"d-flex justify-content-center\">\n                    <Pagination\n                        itemsCount={count}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={handlePageChange}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UserProvider from \"../hooks/useUsers\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    return (\n        <>\n            <UserProvider>\n                {userId ? (\n                    edit ? (\n                        <EditUserPage />\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UserProvider>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label \" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const history = useHistory();\n    const { logIn } = useAuth();\n    const [errors, setErrors] = useState({});\n    const [enterError, setEnterError] = useState(null);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n        setEnterError(null);\n    };\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателкн для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n\n        try {\n            await logIn(data);\n            history.push(\n                history.location.state\n                    ? history.location.state.from.pathname\n                    : \"/\"\n            );\n        } catch (error) {\n            setEnterError(error.message);\n        }\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {enterError && <p className=\"text-danger\">{enterError}</p>}\n            <button\n                type=\"submit\"\n                disabled={!isValid || enterError}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n    const { signUp } = useAuth();\n    const { qualities } = useQualities();\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const { professions } = useProfessions();\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должно состоять минимум из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязательна для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n        try {\n            await signUp(newData);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                name=\"profession\"\n                options={professionsList}\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качесвта\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport professions from \"../mockData/professions.json\";\nimport qualities from \"../mockData/qualities.json\";\nimport users from \"../mockData/users.json\";\nimport httpService from \"../services/http.service\";\n\nconst useMockData = () => {\n    const statusConsts = {\n        idle: \"Not Started\",\n        pending: \"In Process\",\n        successed: \"Ready\",\n        error: \"Error occured\"\n    };\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(statusConsts.idle);\n    const [progress, setProgress] = useState(0);\n    const [count, setCount] = useState(0);\n    const summuryCount = professions.length + qualities.length + users.length;\n    const incrementCount = () => {\n        setCount((prevState) => prevState + 1);\n    };\n    const updateProgress = () => {\n        if (count !== 0 && status === statusConsts.idle) {\n            setStatus(statusConsts.pending);\n        }\n        const newProgress = Math.floor((count / summuryCount) * 100);\n        if (progress < newProgress) {\n            setProgress(() => newProgress);\n        }\n        if (newProgress === 100) {\n            setStatus(statusConsts.successed);\n        }\n    };\n\n    useEffect(() => {\n        updateProgress();\n    }, [count]);\n    async function initialize() {\n        try {\n            for (const prof of professions) {\n                await httpService.put(\"profession/\" + prof._id, prof);\n                incrementCount();\n            }\n            for (const user of users) {\n                await httpService.put(\"user/\" + user._id, user);\n                incrementCount();\n            }\n            for (const qual of qualities) {\n                await httpService.put(\"quality/\" + qual._id, qual);\n                incrementCount();\n            }\n        } catch (error) {\n            setError(error);\n            setStatus(statusConsts.error);\n        }\n    }\n\n    return { error, initialize, progress, status };\n};\n\nexport default useMockData;\n","import React from \"react\";\nimport useMockData from \"../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1> Main Page</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status:{status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                {\" \"}\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nconst NavProfile = () => {\r\n    const { currentUser } = useAuth();\r\n    const [isOpen, setOpen] = useState(false);\r\n    const toggleMenu = () => {\r\n        setOpen((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"dropdown\" onClick={toggleMenu}>\r\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n                <div className=\"me-2\">{currentUser.name}</div>\r\n                <img\r\n                    src={currentUser.image}\r\n                    alt=\"avatar\"\r\n                    width=\"40\"\r\n                    height=\"40\"\r\n                    className=\"img-responsive rounded-circle\"\r\n                />\r\n            </div>\r\n            <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\r\n                <Link\r\n                    to={`/users/${currentUser._id}`}\r\n                    className=\"dropdown-item\"\r\n                >\r\n                    Profile\r\n                </Link>\r\n                <Link to=\"/logout\" className=\"dropdown-item\">\r\n                    Log Out\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport NavProfile from \"./navProfile\";\nconst NavBar = () => {\n    const { currentUser } = useAuth();\n    return (\n        <nav className=\"navbar bg-light mb-3\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                            Main\n                        </Link>\n                    </li>\n                    {currentUser && (\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link \"\n                                aria-current=\"page\"\n                                to=\"/users\"\n                            >\n                                Users\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n                <div className=\"d-flex\">\n                    {currentUser ? (\n                        <NavProfile />\n                    ) : (\n                        <Link\n                            className=\"nav-link \"\n                            aria-current=\"page\"\n                            to=\"/login\"\n                        >\n                            Login\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\r\n    const { currentUser } = useAuth();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!currentUser) {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    );\r\n                }\r\n                return Component ? <Component {...props} /> : children;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n    location: PropTypes.object,\r\n    component: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n\r\nconst LogOut = () => {\r\n    const { logOut } = useAuth();\r\n    useEffect(() => {\r\n        logOut();\r\n    }, []);\r\n    return <h1>Loading...</h1>;\r\n};\r\n\r\nexport default LogOut;\r\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ToastContainer } from \"react-toastify\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\nimport { QualitiesProvider } from \"./hooks/useQualities\";\nimport AuthProvider from \"./hooks/useAuth\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport LogOut from \"./layouts/logOut\";\n\nfunction App() {\n    return (\n        <div>\n            <AuthProvider>\n                <NavBar />\n\n                <QualitiesProvider>\n                    <ProfessionProvider>\n                        <Switch>\n                            <ProtectedRoute\n                                path=\"/users/:userId?/:edit?\"\n                                component={Users}\n                            />\n                            <Route path=\"/login/:type?\" component={Login} />\n                            <Route path=\"/logout\" component={LogOut} />\n                            <Route path=\"/\" exact component={Main} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </ProfessionProvider>\n                </QualitiesProvider>\n            </AuthProvider>\n\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}